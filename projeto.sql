-- MySQL Script generated by MySQL Workbench
-- Tue Jan 29 21:49:01 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`Codigo_Postal`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Codigo_Postal` (
  `cod_postal` VARCHAR(8) NOT NULL,
  `localidade` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`cod_postal`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Especialidade`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Especialidade` (
  `id_especialidade` INT NOT NULL AUTO_INCREMENT,
  `descricao` VARCHAR(45) NOT NULL,
  `preco` INT NOT NULL,
  PRIMARY KEY (`id_especialidade`),
  UNIQUE INDEX `id_especialidade_UNIQUE` (`id_especialidade` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Sexo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Sexo` (
  `sexo` VARCHAR(3) NOT NULL,
  `sexo_extenso` VARCHAR(20) NULL,
  PRIMARY KEY (`sexo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Medico_Veterinario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Medico_Veterinario` (
  `id_medico_vet` INT NOT NULL AUTO_INCREMENT,
  `nome_medico_vet` VARCHAR(45) NOT NULL,
  `nr_contribuinte` INT NOT NULL,
  `data_de_nascimento` DATE NOT NULL,
  `codigo_postal` VARCHAR(8) NOT NULL,
  `id_especialidade` INT NOT NULL,
  `sexo` VARCHAR(3) NOT NULL,
  `morada` VARCHAR(90) NULL,
  PRIMARY KEY (`id_medico_vet`),
  UNIQUE INDEX `cc_UNIQUE` (`nr_contribuinte` ASC) VISIBLE,
  INDEX `fk_codigo_postal_idx` (`codigo_postal` ASC) VISIBLE,
  INDEX `fk_idEspecialidade_idx` (`id_especialidade` ASC) VISIBLE,
  UNIQUE INDEX `id_medico_vet_UNIQUE` (`id_medico_vet` ASC) VISIBLE,
  INDEX `fk_Medico_Veterinário_Sexo1_idx` (`sexo` ASC) VISIBLE,
  CONSTRAINT `fk_codigo_postal`
    FOREIGN KEY (`codigo_postal`)
    REFERENCES `mydb`.`Codigo_Postal` (`cod_postal`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_id_especialidade`
    FOREIGN KEY (`id_especialidade`)
    REFERENCES `mydb`.`Especialidade` (`id_especialidade`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Medico_Veterinário_Sexo1`
    FOREIGN KEY (`sexo`)
    REFERENCES `mydb`.`Sexo` (`sexo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Enfermeiro_Veterinario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Enfermeiro_Veterinario` (
  `id_enfermeiro_vet` INT NOT NULL AUTO_INCREMENT,
  `nome_enfermeiro_vet` VARCHAR(45) NOT NULL,
  `data_de_nascimento` DATE NOT NULL,
  `nr_contribuinte` INT NOT NULL,
  `codigo_postal` VARCHAR(8) NOT NULL,
  `sexo` VARCHAR(3) NOT NULL,
  `morada` VARCHAR(90) NULL,
  PRIMARY KEY (`id_enfermeiro_vet`),
  UNIQUE INDEX `cc_UNIQUE` (`nr_contribuinte` ASC) VISIBLE,
  INDEX `fk_codigo_postal3_idx` (`codigo_postal` ASC) VISIBLE,
  INDEX `fk_Enfermeiro Veterinario_Sexo1_idx` (`sexo` ASC) VISIBLE,
  CONSTRAINT `fk_codigo_postal3`
    FOREIGN KEY (`codigo_postal`)
    REFERENCES `mydb`.`Codigo_Postal` (`cod_postal`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Enfermeiro Veterinario_Sexo1`
    FOREIGN KEY (`sexo`)
    REFERENCES `mydb`.`Sexo` (`sexo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Tipo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Tipo` (
  `id_tipo` INT NOT NULL,
  `descricao` VARCHAR(45) NULL,
  PRIMARY KEY (`id_tipo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Especie`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Especie` (
  `nome_especie` VARCHAR(20) NOT NULL,
  `Descrição` VARCHAR(20) NULL,
  `id_tipo` INT NOT NULL,
  PRIMARY KEY (`nome_especie`),
  INDEX `fk_especie_Tipo1_idx` (`id_tipo` ASC) VISIBLE,
  CONSTRAINT `fk_especie_Tipo1`
    FOREIGN KEY (`id_tipo`)
    REFERENCES `mydb`.`Tipo` (`id_tipo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Especie_Completa`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Especie_Completa` (
  `id_especie` INT NOT NULL AUTO_INCREMENT,
  `nome_especie` VARCHAR(20) NOT NULL,
  `nome_raca` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`id_especie`),
  INDEX `fk_Especie_Raça1_idx` (`nome_especie` ASC) VISIBLE,
  CONSTRAINT `fk_especie`
    FOREIGN KEY (`nome_especie`)
    REFERENCES `mydb`.`Especie` (`nome_especie`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Dono`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Dono` (
  `id_dono` INT NOT NULL AUTO_INCREMENT,
  `nome_dono` VARCHAR(45) NOT NULL,
  `nr_contribuinte` VARCHAR(45) NOT NULL,
  `data_de_nascimento` DATE NOT NULL,
  `cod_postal` VARCHAR(8) NOT NULL,
  `sexo` VARCHAR(3) NOT NULL,
  `morada` VARCHAR(90) NULL,
  PRIMARY KEY (`id_dono`),
  UNIQUE INDEX `cc_dono_UNIQUE` (`nr_contribuinte` ASC) VISIBLE,
  INDEX `fk_codigo_postal2_idx` (`cod_postal` ASC) VISIBLE,
  INDEX `fk_Dono_Sexo1_idx` (`sexo` ASC) VISIBLE,
  CONSTRAINT `fk_codigo_postal2`
    FOREIGN KEY (`cod_postal`)
    REFERENCES `mydb`.`Codigo_Postal` (`cod_postal`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Dono_Sexo1`
    FOREIGN KEY (`sexo`)
    REFERENCES `mydb`.`Sexo` (`sexo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Animal`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Animal` (
  `id_animal` INT NOT NULL AUTO_INCREMENT,
  `data_de_nascimento` DATE NOT NULL,
  `nome_animal` VARCHAR(45) NOT NULL,
  `id_especie` INT NOT NULL,
  `id_dono` INT NOT NULL,
  `sexo` VARCHAR(3) NOT NULL,
  PRIMARY KEY (`id_animal`),
  INDEX `fk_idEspecie_idx` (`id_especie` ASC) VISIBLE,
  INDEX `fk_Animal_Dono1_idx` (`id_dono` ASC) VISIBLE,
  INDEX `fk_Animal_Sexo1_idx` (`sexo` ASC) VISIBLE,
  CONSTRAINT `fk_idEspecie`
    FOREIGN KEY (`id_especie`)
    REFERENCES `mydb`.`Especie_Completa` (`id_especie`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Animal_Dono1`
    FOREIGN KEY (`id_dono`)
    REFERENCES `mydb`.`Dono` (`id_dono`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Animal_Sexo1`
    FOREIGN KEY (`sexo`)
    REFERENCES `mydb`.`Sexo` (`sexo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Estado`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Estado` (
  `id_estado` INT NOT NULL,
  `estado` VARCHAR(20) NULL,
  PRIMARY KEY (`id_estado`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Consultas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Consultas` (
  `id_consulta` INT NOT NULL AUTO_INCREMENT,
  `id_medico_vet` INT NOT NULL,
  `id_animal` INT NOT NULL,
  `data` DATE NOT NULL,
  `hora_marcada_inicio` TIME NOT NULL,
  `hora_marcada_fim` TIME NOT NULL,
  `hora_inicio` TIME NULL,
  `hora_fim` TIME NULL,
  `id_estado` INT NOT NULL,
  `observacoes` VARCHAR(90) NULL,
  `peso` INT NULL,
  PRIMARY KEY (`id_consulta`),
  INDEX `fk_Consultas_Animal1_idx` (`id_animal` ASC) VISIBLE,
  INDEX `fk_Consultas_Medico_Veterinario1_idx` (`id_medico_vet` ASC) INVISIBLE,
  INDEX `fk_Consultas_estado1_idx` (`id_estado` ASC) VISIBLE,
  CONSTRAINT `fk_Consultas_Animal1`
    FOREIGN KEY (`id_animal`)
    REFERENCES `mydb`.`Animal` (`id_animal`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Consultas_Medico Veterinario1`
    FOREIGN KEY (`id_medico_vet`)
    REFERENCES `mydb`.`Medico_Veterinario` (`id_medico_vet`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Consultas_estado1`
    FOREIGN KEY (`id_estado`)
    REFERENCES `mydb`.`Estado` (`id_estado`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Disponibilidade_Medico`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Disponibilidade_Medico` (
  `id_disponibilidade` INT NOT NULL AUTO_INCREMENT,
  `id_medico_vet` INT NOT NULL,
  `data` DATE NULL,
  `hora_inicio` TIME NOT NULL,
  `hora_fim` TIME NOT NULL,
  `id_consulta` INT NOT NULL,
  PRIMARY KEY (`id_disponibilidade`),
  INDEX `fk_Disponibilidade Médico_Consultas1_idx` (`id_consulta` ASC) VISIBLE,
  INDEX `fk_Disponibilidade Médico_Médico Veterinário1_idx` (`id_medico_vet` ASC) VISIBLE,
  CONSTRAINT `fk_Disponibilidade Médico_Consultas1`
    FOREIGN KEY (`id_consulta`)
    REFERENCES `mydb`.`Consultas` (`id_consulta`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Disponibilidade Médico_Médico Veterinário1`
    FOREIGN KEY (`id_medico_vet`)
    REFERENCES `mydb`.`Medico_Veterinario` (`id_medico_vet`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Tipos_Exames`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Tipos_Exames` (
  `id_tipo_exame` INT NOT NULL AUTO_INCREMENT,
  `descricao` VARCHAR(45) NOT NULL,
  `preco` INT NULL,
  PRIMARY KEY (`id_tipo_exame`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Exames`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Exames` (
  `id_exame` INT NOT NULL AUTO_INCREMENT,
  `id_tipo_exame` INT NOT NULL,
  `id_medico_vet` INT NOT NULL,
  `id_animal` INT NOT NULL,
  `data` DATE NULL,
  `hora_marcada_inicio` TIME NOT NULL,
  `hora_marcada_fim` TIME NOT NULL,
  `hora_inicio` TIME NULL,
  `hora_fim` TIME NULL,
  `id_estado` INT NOT NULL,
  `relatorio` VARCHAR(90) NULL,
  INDEX `fk_idAnimal_idx` (`id_animal` ASC) VISIBLE,
  INDEX `fk_tipo_exame_idx` (`id_tipo_exame` ASC) VISIBLE,
  PRIMARY KEY (`id_exame`),
  INDEX `fk_Exames_Médico Veterinário1_idx` (`id_medico_vet` ASC) VISIBLE,
  INDEX `fk_Exames_estado1_idx` (`id_estado` ASC) VISIBLE,
  CONSTRAINT `fk_idAnimal`
    FOREIGN KEY (`id_animal`)
    REFERENCES `mydb`.`Animal` (`id_animal`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tipo_exame`
    FOREIGN KEY (`id_tipo_exame`)
    REFERENCES `mydb`.`Tipos_Exames` (`id_tipo_exame`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Exames_Médico Veterinário1`
    FOREIGN KEY (`id_medico_vet`)
    REFERENCES `mydb`.`Medico_Veterinario` (`id_medico_vet`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Exames_estado1`
    FOREIGN KEY (`id_estado`)
    REFERENCES `mydb`.`Estado` (`id_estado`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Equipamento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Equipamento` (
  `id_equipamento` INT NOT NULL,
  `localizacao` VARCHAR(10) NOT NULL,
  `modelo` VARCHAR(30) NOT NULL,
  `descricao` VARCHAR(90) NULL,
  PRIMARY KEY (`id_equipamento`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Dono`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Dono` (
  `id_dono` INT NOT NULL AUTO_INCREMENT,
  `nome_dono` VARCHAR(45) NOT NULL,
  `nr_contribuinte` VARCHAR(45) NOT NULL,
  `data_de_nascimento` DATE NOT NULL,
  `cod_postal` VARCHAR(8) NOT NULL,
  `sexo` VARCHAR(3) NOT NULL,
  `morada` VARCHAR(90) NULL,
  PRIMARY KEY (`id_dono`),
  UNIQUE INDEX `cc_dono_UNIQUE` (`nr_contribuinte` ASC) VISIBLE,
  INDEX `fk_codigo_postal2_idx` (`cod_postal` ASC) VISIBLE,
  INDEX `fk_Dono_Sexo1_idx` (`sexo` ASC) VISIBLE,
  CONSTRAINT `fk_codigo_postal2`
    FOREIGN KEY (`cod_postal`)
    REFERENCES `mydb`.`Codigo_Postal` (`cod_postal`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Dono_Sexo1`
    FOREIGN KEY (`sexo`)
    REFERENCES `mydb`.`Sexo` (`sexo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`table1`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`table1` (
  `idtable1` INT NOT NULL,
  PRIMARY KEY (`idtable1`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Tipos_Exames_Equipamento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Tipos_Exames_Equipamento` (
  `id_tipo_exame` INT NOT NULL,
  `id_equipamento` INT NOT NULL,
  PRIMARY KEY (`id_tipo_exame`, `id_equipamento`),
  INDEX `fk_Tipos Exames_has_Equipamento_Equipamento1_idx` (`id_equipamento` ASC) VISIBLE,
  INDEX `fk_Tipos Exames_has_Equipamento_Tipos Exames1_idx` (`id_tipo_exame` ASC) VISIBLE,
  CONSTRAINT `fk_Tipos Exames_has_Equipamento_Tipos Exames1`
    FOREIGN KEY (`id_tipo_exame`)
    REFERENCES `mydb`.`Tipos_Exames` (`id_tipo_exame`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Tipos Exames_has_Equipamento_Equipamento1`
    FOREIGN KEY (`id_equipamento`)
    REFERENCES `mydb`.`Equipamento` (`id_equipamento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Disponibilidade_Medico_Exames`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Disponibilidade_Medico_Exames` (
  `id_disponibilidade` INT NOT NULL,
  `id_exame` INT NOT NULL,
  PRIMARY KEY (`id_disponibilidade`, `id_exame`),
  INDEX `fk_Disponibilidade Médico_has_Exames_Exames1_idx` (`id_exame` ASC) VISIBLE,
  INDEX `fk_Disponibilidade Médico_has_Exames_Disponibilidade Médi_idx` (`id_disponibilidade` ASC) VISIBLE,
  CONSTRAINT `fk_Disponibilidade Médico_has_Exames_Disponibilidade Médico1`
    FOREIGN KEY (`id_disponibilidade`)
    REFERENCES `mydb`.`Disponibilidade_Medico` (`id_disponibilidade`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Disponibilidade Médico_has_Exames_Exames1`
    FOREIGN KEY (`id_exame`)
    REFERENCES `mydb`.`Exames` (`id_exame`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Enfermeiro_Veterinario_Medico_Veterinario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Enfermeiro_Veterinario_Medico_Veterinario` (
  `id_enfermeiro_vet` INT NOT NULL,
  `id_medico_vet` INT NOT NULL,
  `data` DATE NOT NULL,
  `hora_inicio` TIME NOT NULL,
  PRIMARY KEY (`id_enfermeiro_vet`, `id_medico_vet`, `data`, `hora_inicio`),
  INDEX `fk_Enfermeiro Veterinario_has_Medico_Veterinário_Medico_Ve_idx` (`id_medico_vet` ASC) VISIBLE,
  INDEX `fk_Enfermeiro Veterinario_has_Medico_Veterinário_Enfermeir_idx` (`id_enfermeiro_vet` ASC) VISIBLE,
  CONSTRAINT `fk_Enfermeiro Veterinario_has_Medico_Veterinário_Enfermeiro 1`
    FOREIGN KEY (`id_enfermeiro_vet`)
    REFERENCES `mydb`.`Enfermeiro_Veterinario` (`id_enfermeiro_vet`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Enfermeiro Veterinario_has_Medico_Veterinário_Medico_Vete1`
    FOREIGN KEY (`id_medico_vet`)
    REFERENCES `mydb`.`Medico_Veterinario` (`id_medico_vet`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Contacto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Contacto` (
  `id_contacto` INT NOT NULL AUTO_INCREMENT,
  `contacto` VARCHAR(50) NULL,
  PRIMARY KEY (`id_contacto`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Contacto_has_Dono`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Contacto_has_Dono` (
  `id_contactos` INT NOT NULL,
  `id_dono` INT NOT NULL,
  PRIMARY KEY (`id_contactos`, `id_dono`),
  INDEX `fk_Contacto_has_Dono_Dono1_idx` (`id_dono` ASC) VISIBLE,
  INDEX `fk_Contacto_has_Dono_Contacto1_idx` (`id_contactos` ASC) VISIBLE,
  CONSTRAINT `fk_Contacto_has_Dono_Contacto1`
    FOREIGN KEY (`id_contactos`)
    REFERENCES `mydb`.`Contacto` (`id_contacto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Contacto_has_Dono_Dono1`
    FOREIGN KEY (`id_dono`)
    REFERENCES `mydb`.`Dono` (`id_dono`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Contacto_has_Enfermeiro_Veterinario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Contacto_has_Enfermeiro_Veterinario` (
  `id_contactos` INT NOT NULL,
  `id_enfermeiro_vet` INT NOT NULL,
  PRIMARY KEY (`id_contactos`, `id_enfermeiro_vet`),
  INDEX `fk_Contacto_has_Enfermeiro_Veterinario_Enfermeiro_Veterinar_idx` (`id_enfermeiro_vet` ASC) VISIBLE,
  INDEX `fk_Contacto_has_Enfermeiro_Veterinario_Contacto1_idx` (`id_contactos` ASC) VISIBLE,
  CONSTRAINT `fk_Contacto_has_Enfermeiro_Veterinario_Contacto1`
    FOREIGN KEY (`id_contactos`)
    REFERENCES `mydb`.`Contacto` (`id_contacto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Contacto_has_Enfermeiro_Veterinario_Enfermeiro_Veterinario1`
    FOREIGN KEY (`id_enfermeiro_vet`)
    REFERENCES `mydb`.`Enfermeiro_Veterinario` (`id_enfermeiro_vet`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Contacto_Medico_Veterinario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Contacto_Medico_Veterinario` (
  `id_contactos` INT NOT NULL,
  `id_medico_vet` INT NOT NULL,
  PRIMARY KEY (`id_contactos`, `id_medico_vet`),
  INDEX `fk_Contacto_has_Medico_Veterinario_Medico_Veterinario1_idx` (`id_medico_vet` ASC) VISIBLE,
  INDEX `fk_Contacto_has_Medico_Veterinario_Contacto1_idx` (`id_contactos` ASC) VISIBLE,
  CONSTRAINT `fk_Contacto_has_Medico_Veterinario_Contacto1`
    FOREIGN KEY (`id_contactos`)
    REFERENCES `mydb`.`Contacto` (`id_contacto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Contacto_has_Medico_Veterinario_Medico_Veterinario1`
    FOREIGN KEY (`id_medico_vet`)
    REFERENCES `mydb`.`Medico_Veterinario` (`id_medico_vet`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `mydb` ;

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view1`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view1` (`id` INT);

-- -----------------------------------------------------
-- View `mydb`.`view1`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view1`;
USE `mydb`;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `mydb`.`Codigo_Postal`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`Codigo_Postal` (`cod_postal`, `localidade`) VALUES ('4630-987', 'Marco de Canaveses');
INSERT INTO `mydb`.`Codigo_Postal` (`cod_postal`, `localidade`) VALUES ('4202-800', 'Porto');
INSERT INTO `mydb`.`Codigo_Postal` (`cod_postal`, `localidade`) VALUES ('8400-960', 'Braga');
INSERT INTO `mydb`.`Codigo_Postal` (`cod_postal`, `localidade`) VALUES ('4700-116', 'Braga');
INSERT INTO `mydb`.`Codigo_Postal` (`cod_postal`, `localidade`) VALUES ('4405-667', 'Vila Nova de Gaia');
INSERT INTO `mydb`.`Codigo_Postal` (`cod_postal`, `localidade`) VALUES ('4400-577', 'Vila Nova de Famalicao');
INSERT INTO `mydb`.`Codigo_Postal` (`cod_postal`, `localidade`) VALUES ('4780-415', 'Santo Tirso');
INSERT INTO `mydb`.`Codigo_Postal` (`cod_postal`, `localidade`) VALUES ('4705-671', 'Tadim');
INSERT INTO `mydb`.`Codigo_Postal` (`cod_postal`, `localidade`) VALUES ('4800-112', 'Guimaraes');

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`Especialidade`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`Especialidade` (`id_especialidade`, `descricao`, `preco`) VALUES (001, 'Oftalmologia', 10);
INSERT INTO `mydb`.`Especialidade` (`id_especialidade`, `descricao`, `preco`) VALUES (002, 'Odontologia', 20);
INSERT INTO `mydb`.`Especialidade` (`id_especialidade`, `descricao`, `preco`) VALUES (003, 'Dermatologia', 10);

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`Sexo`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`Sexo` (`sexo`, `sexo_extenso`) VALUES ('M', 'Masculino');
INSERT INTO `mydb`.`Sexo` (`sexo`, `sexo_extenso`) VALUES ('F', 'Feminino');

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`Medico_Veterinario`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`Medico_Veterinario` (`id_medico_vet`, `nome_medico_vet`, `nr_contribuinte`, `data_de_nascimento`, `codigo_postal`, `id_especialidade`, `sexo`, `morada`) VALUES (001, 'Afonso Campos', 233564897, '1989-01-31', '4630-987', 001, 'M', 'Av. Dr. Francisco Sa Carneiro 765, Marco, Marco de Canaveses');
INSERT INTO `mydb`.`Medico_Veterinario` (`id_medico_vet`, `nome_medico_vet`, `nr_contribuinte`, `data_de_nascimento`, `codigo_postal`, `id_especialidade`, `sexo`, `morada`) VALUES (002, 'Laura Ronquilho', 564102369, '1975-08-02', '4202-800', 003, 'F', 'R Igreja de Paranhos 22, Paranhos, Porto');
INSERT INTO `mydb`.`Medico_Veterinario` (`id_medico_vet`, `nome_medico_vet`, `nr_contribuinte`, `data_de_nascimento`, `codigo_postal`, `id_especialidade`, `sexo`, `morada`) VALUES (003, 'Beatriz Pinho', 254301987, '1990-01-04', '8400-960', 002, 'F', 'R. Pedro Ourives 19, Cividade, Braga');

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`Enfermeiro_Veterinario`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`Enfermeiro_Veterinario` (`id_enfermeiro_vet`, `nome_enfermeiro_vet`, `data_de_nascimento`, `nr_contribuinte`, `codigo_postal`, `sexo`, `morada`) VALUES (001, 'Pedro Teixeira', '1996-04-25', 546128796, '4700-116', 'M', 'R. do Cruzeiro 29');
INSERT INTO `mydb`.`Enfermeiro_Veterinario` (`id_enfermeiro_vet`, `nome_enfermeiro_vet`, `data_de_nascimento`, `nr_contribuinte`, `codigo_postal`, `sexo`, `morada`) VALUES (002, 'Cláudio Ribeiro', '1975-04-14', 364300268, '4405-667', 'M', 'Av. Prof. Orlando Ribeiro 57');
INSERT INTO `mydb`.`Enfermeiro_Veterinario` (`id_enfermeiro_vet`, `nome_enfermeiro_vet`, `data_de_nascimento`, `nr_contribuinte`, `codigo_postal`, `sexo`, `morada`) VALUES (003, 'Adriana Nobre', '1976-08-02', 214987654, '4400-577', 'F', 'R. Conde Vale Sao Cosme 490 ');

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`Tipo`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`Tipo` (`id_tipo`, `descricao`) VALUES (001, 'pequeno porte');
INSERT INTO `mydb`.`Tipo` (`id_tipo`, `descricao`) VALUES (002, 'grande porte');
INSERT INTO `mydb`.`Tipo` (`id_tipo`, `descricao`) VALUES (003, 'exotico');
INSERT INTO `mydb`.`Tipo` (`id_tipo`, `descricao`) VALUES (004, 'pecuaria');

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`Especie`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`Especie` (`nome_especie`, `Descrição`, `id_tipo`) VALUES ('gato', 'Felis catus', 001);
INSERT INTO `mydb`.`Especie` (`nome_especie`, `Descrição`, `id_tipo`) VALUES ('cavalo', 'Equus caballus', 002);
INSERT INTO `mydb`.`Especie` (`nome_especie`, `Descrição`, `id_tipo`) VALUES ('papagaio', 'Amazona aestiva', 003);

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`Especie_Completa`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`Especie_Completa` (`id_especie`, `nome_especie`, `nome_raca`) VALUES (001, 'gato', 'persa');
INSERT INTO `mydb`.`Especie_Completa` (`id_especie`, `nome_especie`, `nome_raca`) VALUES (002, 'cavalo', 'puro-sangue ingles');
INSERT INTO `mydb`.`Especie_Completa` (`id_especie`, `nome_especie`, `nome_raca`) VALUES (003, 'papagaio', 'amazona aestiva');

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`Dono`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`Dono` (`id_dono`, `nome_dono`, `nr_contribuinte`, `data_de_nascimento`, `cod_postal`, `sexo`, `morada`) VALUES (001, 'Augusto Pires', '202147547', '1995-04-03', '4780-415', 'M', ' R. Carvalhais 34');
INSERT INTO `mydb`.`Dono` (`id_dono`, `nome_dono`, `nr_contribuinte`, `data_de_nascimento`, `cod_postal`, `sexo`, `morada`) VALUES (002, 'Paulo Teixeira', '632784201', '1980-03-20', '4705-671', 'M', 'Av. Dr. Domingos Braga da Cruz 41');
INSERT INTO `mydb`.`Dono` (`id_dono`, `nome_dono`, `nr_contribuinte`, `data_de_nascimento`, `cod_postal`, `sexo`, `morada`) VALUES (003, 'Ana Cunha', '362108369', '1974-04-26', '4800-112', 'F', 'R. de Antemil Pencelo 78');

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`Animal`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`Animal` (`id_animal`, `data_de_nascimento`, `nome_animal`, `id_especie`, `id_dono`, `sexo`) VALUES (001, '2015-04-30', 'Pintas', 003, 001, 'M');
INSERT INTO `mydb`.`Animal` (`id_animal`, `data_de_nascimento`, `nome_animal`, `id_especie`, `id_dono`, `sexo`) VALUES (002, '2018-03-20', 'Tareco', 001, 002, 'M');
INSERT INTO `mydb`.`Animal` (`id_animal`, `data_de_nascimento`, `nome_animal`, `id_especie`, `id_dono`, `sexo`) VALUES (003, '2011-01-08', 'Oshi', 002, 003, 'F');

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`Estado`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`Estado` (`id_estado`, `estado`) VALUES (001, 'marcado');
INSERT INTO `mydb`.`Estado` (`id_estado`, `estado`) VALUES (002, 'adiado');
INSERT INTO `mydb`.`Estado` (`id_estado`, `estado`) VALUES (003, 'a decorrer');
INSERT INTO `mydb`.`Estado` (`id_estado`, `estado`) VALUES (004, 'efetuado');
INSERT INTO `mydb`.`Estado` (`id_estado`, `estado`) VALUES (005, 'cancelado');

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`Consultas`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`Consultas` (`id_consulta`, `id_medico_vet`, `id_animal`, `data`, `hora_marcada_inicio`, `hora_marcada_fim`, `hora_inicio`, `hora_fim`, `id_estado`, `observacoes`, `peso`) VALUES (001, 002, 003, '2018-08-21', '14:50', '15:20', '15:03', '15:20', 001, 'saudavel', 1570);
INSERT INTO `mydb`.`Consultas` (`id_consulta`, `id_medico_vet`, `id_animal`, `data`, `hora_marcada_inicio`, `hora_marcada_fim`, `hora_inicio`, `hora_fim`, `id_estado`, `observacoes`, `peso`) VALUES (002, 001, 001, '2017-04-07', '15:45', '16:20', '16:20', '16:45', 003, 'precisa de ser seguido', 7425);
INSERT INTO `mydb`.`Consultas` (`id_consulta`, `id_medico_vet`, `id_animal`, `data`, `hora_marcada_inicio`, `hora_marcada_fim`, `hora_inicio`, `hora_fim`, `id_estado`, `observacoes`, `peso`) VALUES (003, 003, 002, '2018-06-26', '12:40', '13:00', '13:02', '13:58', 002, 'precisa de outra avaliacao', 654584);

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`Disponibilidade_Medico`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`Disponibilidade_Medico` (`id_disponibilidade`, `id_medico_vet`, `data`, `hora_inicio`, `hora_fim`, `id_consulta`) VALUES (001, 001, '2017-08-31', '08:44', '12:13', 001);
INSERT INTO `mydb`.`Disponibilidade_Medico` (`id_disponibilidade`, `id_medico_vet`, `data`, `hora_inicio`, `hora_fim`, `id_consulta`) VALUES (002, 002, '2018-05-14', '13:14', '17:52', 002);
INSERT INTO `mydb`.`Disponibilidade_Medico` (`id_disponibilidade`, `id_medico_vet`, `data`, `hora_inicio`, `hora_fim`, `id_consulta`) VALUES (003, 003, '2018-09-07', '11:04', '15:47', 003);

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`Tipos_Exames`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`Tipos_Exames` (`id_tipo_exame`, `descricao`, `preco`) VALUES (001, 'tomografia computadorizada', 1000);
INSERT INTO `mydb`.`Tipos_Exames` (`id_tipo_exame`, `descricao`, `preco`) VALUES (002, 'amostragem da pele', 40);
INSERT INTO `mydb`.`Tipos_Exames` (`id_tipo_exame`, `descricao`, `preco`) VALUES (003, 'avaliacao de reflexos oculares', 25);

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`Exames`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`Exames` (`id_exame`, `id_tipo_exame`, `id_medico_vet`, `id_animal`, `data`, `hora_marcada_inicio`, `hora_marcada_fim`, `hora_inicio`, `hora_fim`, `id_estado`, `relatorio`) VALUES (001, 001, 002, 001, '2018-09-14', '16:02', '16:52', '16:32', '17:27', 001, 'sem alteracoes odontologicas');
INSERT INTO `mydb`.`Exames` (`id_exame`, `id_tipo_exame`, `id_medico_vet`, `id_animal`, `data`, `hora_marcada_inicio`, `hora_marcada_fim`, `hora_inicio`, `hora_fim`, `id_estado`, `relatorio`) VALUES (002, 002, 001, 003, '2017-12-04', '18:44', '19:34', '19:40', '21:01', 002, 'dermatite nos membros inferiores');
INSERT INTO `mydb`.`Exames` (`id_exame`, `id_tipo_exame`, `id_medico_vet`, `id_animal`, `data`, `hora_marcada_inicio`, `hora_marcada_fim`, `hora_inicio`, `hora_fim`, `id_estado`, `relatorio`) VALUES (003, 003, 003, 002, '2019-01-03', '12:20', '13:00', '14:01', '14:37', 003, 'glaucoma');

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`Equipamento`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`Equipamento` (`id_equipamento`, `localizacao`, `modelo`, `descricao`) VALUES (001, '0.01', 'Ultrassons Dental', 'destartarizador');
INSERT INTO `mydb`.`Equipamento` (`id_equipamento`, `localizacao`, `modelo`, `descricao`) VALUES (002, '1.12', 'Lampada de wood', 'para detectar fungos, bacterias e infeoes parasitarias');
INSERT INTO `mydb`.`Equipamento` (`id_equipamento`, `localizacao`, `modelo`, `descricao`) VALUES (003, '3.05', 'Clearview', 'permite perfeitas imagens da retina em formato digital ');

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`Tipos_Exames_Equipamento`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`Tipos_Exames_Equipamento` (`id_tipo_exame`, `id_equipamento`) VALUES (001, 001);
INSERT INTO `mydb`.`Tipos_Exames_Equipamento` (`id_tipo_exame`, `id_equipamento`) VALUES (002, 002);
INSERT INTO `mydb`.`Tipos_Exames_Equipamento` (`id_tipo_exame`, `id_equipamento`) VALUES (003, 003);

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`Disponibilidade_Medico_Exames`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`Disponibilidade_Medico_Exames` (`id_disponibilidade`, `id_exame`) VALUES (001, 001);
INSERT INTO `mydb`.`Disponibilidade_Medico_Exames` (`id_disponibilidade`, `id_exame`) VALUES (002, 002);
INSERT INTO `mydb`.`Disponibilidade_Medico_Exames` (`id_disponibilidade`, `id_exame`) VALUES (003, 003);

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`Enfermeiro_Veterinario_Medico_Veterinario`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`Enfermeiro_Veterinario_Medico_Veterinario` (`id_enfermeiro_vet`, `id_medico_vet`, `data`, `hora_inicio`) VALUES (001, 001, '2018-02-09', '09:04');
INSERT INTO `mydb`.`Enfermeiro_Veterinario_Medico_Veterinario` (`id_enfermeiro_vet`, `id_medico_vet`, `data`, `hora_inicio`) VALUES (002, 002, '2017-03-07', '11:20');
INSERT INTO `mydb`.`Enfermeiro_Veterinario_Medico_Veterinario` (`id_enfermeiro_vet`, `id_medico_vet`, `data`, `hora_inicio`) VALUES (003, 003, '2019-01-03', '13:15');

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`Contacto`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`Contacto` (`id_contacto`, `contacto`) VALUES (001, '912654120');
INSERT INTO `mydb`.`Contacto` (`id_contacto`, `contacto`) VALUES (002, 'drafonsocampos@gmail.com');
INSERT INTO `mydb`.`Contacto` (`id_contacto`, `contacto`) VALUES (003, 'laura21@gmail.com');
INSERT INTO `mydb`.`Contacto` (`id_contacto`, `contacto`) VALUES (004, '255877655');
INSERT INTO `mydb`.`Contacto` (`id_contacto`, `contacto`) VALUES (005, '963254102');
INSERT INTO `mydb`.`Contacto` (`id_contacto`, `contacto`) VALUES (006, '966987458');
INSERT INTO `mydb`.`Contacto` (`id_contacto`, `contacto`) VALUES (007, '255410269');
INSERT INTO `mydb`.`Contacto` (`id_contacto`, `contacto`) VALUES (008, '966875932');
INSERT INTO `mydb`.`Contacto` (`id_contacto`, `contacto`) VALUES (009, '255369845');

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`Contacto_has_Dono`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`Contacto_has_Dono` (`id_contactos`, `id_dono`) VALUES (001, 001);
INSERT INTO `mydb`.`Contacto_has_Dono` (`id_contactos`, `id_dono`) VALUES (002, 002);
INSERT INTO `mydb`.`Contacto_has_Dono` (`id_contactos`, `id_dono`) VALUES (003, 003);

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`Contacto_has_Enfermeiro_Veterinario`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`Contacto_has_Enfermeiro_Veterinario` (`id_contactos`, `id_enfermeiro_vet`) VALUES (001, 001);
INSERT INTO `mydb`.`Contacto_has_Enfermeiro_Veterinario` (`id_contactos`, `id_enfermeiro_vet`) VALUES (002, 002);
INSERT INTO `mydb`.`Contacto_has_Enfermeiro_Veterinario` (`id_contactos`, `id_enfermeiro_vet`) VALUES (003, 003);

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`Contacto_Medico_Veterinario`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`Contacto_Medico_Veterinario` (`id_contactos`, `id_medico_vet`) VALUES (001, 001);
INSERT INTO `mydb`.`Contacto_Medico_Veterinario` (`id_contactos`, `id_medico_vet`) VALUES (002, 002);
INSERT INTO `mydb`.`Contacto_Medico_Veterinario` (`id_contactos`, `id_medico_vet`) VALUES (003, 003);

COMMIT;

USE `mydb`;

DELIMITER $$
USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`Consultas_BEFORE_INSERT1` BEFORE INSERT ON `Consultas` FOR EACH ROW

BEGIN
	IF EXISTS(SELECT * from Disponibilidade_Medico where Disponibilidade_Medico.data = new.data) then
	insert into Disponibilidade_Medico (`id_medico_vet`, `data`, `hora_inicio`, `hora_fim`, `id_consulta`) VALUES ( new.id_medico_vet, new.data, new.hora_marcada_inicio, new.hora_marcada_fim, new.id_consulta);    
	end if;
END$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`Consultas_BEFORE_UPDATE1` BEFORE UPDATE ON `Consultas` FOR EACH ROW
	if new.hora_inicio != old.hora_inicio then
    SET new.id_estado = 003;
    end if;$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`Consultas_BEFORE_UPDATE2` BEFORE UPDATE ON `Consultas` FOR EACH ROW
	if new.hora_fim != old.hora_fim then
	SET new.id_estado = 004;
    end if;$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`Consultas_BEFORE_UPDATE3` BEFORE UPDATE ON `Consultas` FOR EACH ROW
	if new.data != old.data then
    SET new.id_estado = 002;
    end if;$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`Consultas_BEFORE_UPDATE4` BEFORE UPDATE ON `Consultas` FOR EACH ROW
	if new.id_estado = 5 then
    DELETE FROM Disponibilidade_Medico where Disponibilidade_Medico.id_consulta = new.id_consulta;
    end if;$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`Exames_BEFORE_INSERT1` BEFORE INSERT ON `Exames` FOR EACH ROW
BEGIN
	if exists(SELECT 
    exames.id_exame
FROM
    exames
WHERE
    exames.id_medico_vet = new.id_medico_vet
        AND exames.id_animal = new.id_animal
        AND exames.data = new.data
        and exames.hora_marcada_inicio = new.hora_marcada_inicio
        and exames.hora_marcada_fim = new.hora_marcada_fim
ORDER BY exames.id_exame DESC
LIMIT 1) then
insert into Disponibilidade_Medico_Exames(`id_disponibilidade`, `id_exame`) VALUES ((SELECT 
    mydb.disponibilidade_medico_exames.id_disponibilidade
FROM
    mydb.disponibilidade_medico_exames
WHERE
    mydb.disponibilidade_medico_exames.id_exame = (SELECT 
            exames.id_exame
        FROM
            exames
        WHERE
            exames.id_medico_vet = new.id_medico_vet
                AND exames.id_animal = new.id_animal
                AND exames.data = new.data
        ORDER BY exames.id_exame DESC
        LIMIT 1)
ORDER BY disponibilidade_medico_exames.id_disponibilidade DESC
LIMIT 1), new.id_exame );
end if;
END$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`Exames_BEFORE_INSERT2` BEFORE INSERT ON `Exames` FOR EACH ROW
BEGIN
	IF EXISTS(SELECT * from Disponibilidade_Medico where Disponibilidade_Medico.data = new.data) then
	insert into Disponibilidade_Medico (`id_medico_vet`, `data`, `hora_inicio`, `hora_fim`) VALUES ( new.id_medico_vet, new.data, new.hora_marcada_inicio, new.hora_marcada_fim);    
    insert into Disponibilidade_Medico_Exames(`id_disponibilidade`, `id_exame`) VALUES ((SELECT Disponibilidade_Medico.id_dispononibilidade FROM Disponibilidade_Medico ORDER BY Disponibilidade_Medico.id_dispononibilidade DESC LIMIT 1), new.id_exame );
    end if;
END$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`Exames_BEFORE_INSERT3` BEFORE INSERT ON `Exames` FOR EACH ROW
BEGIN
	IF EXISTS(SELECT 
    id_exame
FROM
    exames
WHERE
    mydb.exames.id_exame IN (SELECT 
            tipos_exames_equipamento.id_tipo_exame
        FROM
            tipos_exames_equipamento
        WHERE
            tipos_exames_equipamento.id_tipo_exame IN (SELECT 
                    tipos_exames_equipamento.id_equipamento
                FROM
                    tipos_exames_equipamento
                WHERE
                    tipos_exames_equipamento.id_tipo_exame = new.id_tipo_exame))
			and data = new.data
            and hora_marcada_inicio > new.hora_marcada_inicio
            and hora_marcada_fim < new.hora_marcada_inicio) then
		signal sqlstate '45000';
        end if;
        IF EXISTS(SELECT 
    id_exame
FROM
    exames
WHERE
    mydb.exames.id_exame IN (SELECT 
            tipos_exames_equipamento.id_tipo_exame
        FROM
            tipos_exames_equipamento
        WHERE
            tipos_exames_equipamento.id_tipo_exame IN (SELECT 
                    tipos_exames_equipamento.id_equipamento
                FROM
                    tipos_exames_equipamento
                WHERE
                    tipos_exames_equipamento.id_tipo_exame = new.id_tipo_exame))
			and data = new.data
            and hora_marcada_inicio < new.hora_marcada_fim
            and hora_marcada_fim < new.hora_marcada_fim) then
		signal sqlstate '45000';
        end if;
                IF EXISTS(SELECT 
    id_exame
FROM
    exames
WHERE
    mydb.exames.id_exame IN (SELECT 
            tipos_exames_equipamento.id_tipo_exame
        FROM
            tipos_exames_equipamento
        WHERE
            tipos_exames_equipamento.id_tipo_exame IN (SELECT 
                    tipos_exames_equipamento.id_equipamento
                FROM
                    tipos_exames_equipamento
                WHERE
                    tipos_exames_equipamento.id_tipo_exame = new.id_tipo_exame))
			and data = new.data
            and hora_marcada_inicio > new.hora_marcada_inicio
            and hora_marcada_fim < new.hora_marcada_fim) then
		signal sqlstate '45000';
        end if;
END$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`Exames_BEFORE_UPDATE1` BEFORE UPDATE ON `Exames` FOR EACH ROW
	if new.id_estado = 5 then
    Delete FROM Disponibilidade_Medico where Disponibilidade_Medico.id_disponibilidade in (SELECT 
    Disponibilidade_Medico_Exames.id_disponibilidade
FROM
    Disponibilidade_Medico_Exames
WHERE
    Disponibilidade_Medico_Exames.id_exame = new.id_exame);
    DELETE FROM Disponibilidade_Medico_Exames where Disponibilidade_Medico.id_exame = new.id_exame;
    end if;$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`Exames_BEFORE_UPDATE2` BEFORE UPDATE ON `Exames` FOR EACH ROW
	if new.data != old.data then
	SET new.id_estado = 002;
    end if;$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`Exames_BEFORE_UPDATE3` BEFORE UPDATE ON `Exames` FOR EACH ROW
	if new.hora_inicio != old.hora_inicio then
	SET new.id_estado = 003;
    end if;$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`Exames_BEFORE_UPDATE4` BEFORE UPDATE ON `Exames` FOR EACH ROW
	if new.hora_fim != OLD.hora_fim then
	SET new.id_estado = 004;
    end if;$$


DELIMITER ;
